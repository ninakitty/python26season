1. 简介python
	龟叔 89年
	人工智能

2. 特点
	优点: 简单, 明确, 优雅,跨平台
	缺点: 慢

	解释型编程语言

	分类:
	解释型: 一行一行的把代码进行翻译. 执行效率比较低
		优势: 跨平台性比较好.

	编译型: 一次性把所有的代码进行翻译. 获得一对01代码. 下次运行直接拿着01运行就可以了
		优势: 运行效率高
		缺点: 维护成本高
		编译型语言: C语言, C++, Go语言


3. 解释器
	Cpython : 官方提供的.
	Ipython : anaconda提供的. 和Cpython几乎一样,交互上有一点区别
	Jython: 给java平台的python解释器
	IronPython:给.net平台的解释器 ->  微软


4. 安装python
	python版本:
		2.x
		3.x
		互不兼容.
	环境变量

5. hello world
	window -> win+r

	python -> 进入到命令行模式.  就可以开始写代码了

	创建一个文本文件. 里面写代码, 使用python命令执行这个文件


6. IDE -> pycharm
	IDE: 集成开发环境
	pycharm: 好用, 高端, 大气
	sublime: 不够舒服
	记事本: 算了

7. 变量
    衣服: 200+200 = 400
    交通: 22*10 = 220
    吃饭: 800*4 = 3200
    总支出: 400+220+3200 = 3820

    变量: 把前面得到的一个值或者结果保存起来, 供给后面的程序使用

    变量一般是用英文来命名

    变量的命名规范:
        1. 用数字, 字母, 下划线组成
        2. 数字不能开头, 更不能是纯数字
        3. 不能是关键字, 关键字是python自己占用的东西
        4. 不要太长
        5. 要有意义
        6. 严格区分大小写
        7. 推荐使用驼峰和下划线命名:
            驼峰: 每个单词的首字母大写
            下划线: 每个单词用下划线分开

        目的:让人能简单易懂

9.0 注释
    在程序中对代码进行标注. 方便人能容易理解
    不要满篇的注释

    1. 重要的逻辑
    2. 复杂的逻辑运算
    3. 重要的版本 封板

    怎么写?
        # 单行注释
        """
            多行注释
        """

    早期程序员用注释来调BUG


9. 常量
    不会改变的量. 常量
    用变量来表示常量. 在python里面没有绝对的变量可以表示常量. 通常, 把所有字母写成大写就是常量


10. 基本数据类型(简介)
    数据类型: 就是让计算机能够区分不同的数据. 用来做不同的操作
    在python中使用type函数可以看到数据类型
    1. int 整数 (1`100000000000)
        +
        -
        *
        /
        // 整除
        %  计算余数, 取模

    2. 小数
        float 浮点数
        计算机没有办法保存所有的小数. 都有精度问题

    3. 字符串
        字符连成串
        在python中使用'或者"或者'''或者"""括起来.

        可以做+运算
            字符串拼接
            +左右两端有字符串. 两边必须都是字符串
        还可以做*运算
            只能是字符串*数字

    4. bool
        命题: 真命题, 假命题
        bool: True, False
        布尔值主要用来做条件判断.


11. 用户输入
    可以让计算机和人产生交互
    input()

    用户输入的内容是字符串. 用的时候要当心

12. if语句
    条件判断
    1.
        if 条件:
            语句....
    2.
        if 条件：
            语句。。。。
        else:
            语句。。。。

     3.
        if 条件：
            语句。。。。
        elif 条件：
            语句。。。。
        elif 条件：
            语句。。。。
        。。。。
        else：
            语句。。。

    4. 可以互相嵌套
        一般不要超过3层， 极限5层


13. while循环
    while 条件：
        循环体

14. break和continue
    break: 跳出循环， 结束循环的执行
    continue：停止当前本次循环， 继续执行下一次循环
